apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 2
  selector:
    matchLabels:
      platform: api
  template:
    metadata:
      labels:
        platform: api
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: development
            - name: RUNTIME_ENV
              value: dev
            - name: DATABASE_URL
              value: postgres://postgres:password@dbserver:5432/postgres
          image: arturix/api:latest
          name: api
          imagePullPolicy: Always
          ports:
            - containerPort: 8911
      imagePullSecrets:
        - name: my-container-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    platform: api
  name: api
spec:
  ports:
    - port: 8911
      name: api
  selector:
    platform: api
  type: NodePort



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 2
  selector:
    matchLabels:
      platform: web
  template:
    metadata:
      labels:
        platform: web
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: production
            - name: RUNTIME_ENV
              value: production
          image: arturix/web:latest
          name: web
          imagePullPolicy: Always
          ports:
            - containerPort: 8910
      imagePullSecrets:
        - name: my-container-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    platform: web
  name: web
spec:
  ports:
    - port: 8910
      name: web
  selector:
    platform: web
  type: NodePort


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redk8s
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: redk8s.sys
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  name: web
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  name: api


